{"version":3,"sources":["webpack:///./src/pages/question-2.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/arrow.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_arrow__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Radio__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_RadioGroup__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_7__","SecondPage","a","createElement","aria-label","name","className","value","onChange","control","label","to","type","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","children","_856328897","Fragment","header","paddingTop","Arrow"],"mappings":"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","file":"component---src-pages-question-2-js-e35338452bcef6af2a2f.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport Arrow from \"../components/arrow\"\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst SecondPage = () => (\n  <Layout>\n    {/* Question 1 */}\n    <p>Does your application requires forms?</p>\n    <RadioGroup\n          aria-label=\"Form\"\n          name=\"form\"\n          className=\"\"\n          value=\"\"\n          onChange=\"\"\n        >\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Simple form\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Multuple forms\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"No\" />\n    </RadioGroup> \n    {/* Question 2 */}\n    <p>Does your application requires routing?</p>\n    <RadioGroup\n          aria-label=\"Form\"\n          name=\"form\"\n          className=\"\"\n          value=\"\"\n          onChange=\"\"\n        >\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Simple routing\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Nested routing\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"No\" />\n    </RadioGroup> \n    {/* Question 3 */}\n    <p>Does your application requires routing?</p>\n    <RadioGroup\n          aria-label=\"Form\"\n          name=\"form\"\n          className=\"\"\n          value=\"\"\n          onChange=\"\"\n        >\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Simple routing\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Nested routing\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"No\" />\n    </RadioGroup> \n\n    <Link to=\"/\">\n      <span>Back</span>   \n      <Arrow type=\"back\"/>\n    </Link>\n\n    <Link to=\"/question-3/\">\n      <span>Next</span>  \n      <Arrow type=\"next\"/>\n    </Link>\n    \n\n  </Layout>\n)\n\nexport default SecondPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        {/* <footer>\n          © {new Date().getFullYear()}, Start with\n          {` `}\n          <a href=\"/\">React Starter</a>\n        </footer> */}\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport \"../styles/arrow.css\"\n\nconst Arrow = ({type}) => (\n  <div className=\"arrow\">\n    <div className={`base ${type === \"back\" ? \"base-back\": \"base-next\"}`} />\n    <div className={`top ${type === \"back\" ? \"top-back\": \"top-next\"}`} />\n    <div className={`bottom ${type === \"back\" ? \"bottom-back\": \"bottom-next\"}`} />\n  </div>\n)\n\nexport default Arrow\n\nArrow.propTypes = {\n    type: PropTypes.oneOf([\"back\", \"next\"])\n\n}"],"sourceRoot":""}